#!/usr/bin/env ruby
require 'bundler/setup'
require 'rack'
require_relative '../version'

ENV['RACK_ENV'] ||= 'development'

APP_ROOT = File.expand_path('..', File.dirname(__FILE__))
ENV['RACKUP_FILE'] = File.join(APP_ROOT, 'config.ru')

command, port = ARGV.first&.split(':')

LOGO = <<-'LOGO'
  ____  _    _  ____  _____
 |  _ \| |  | || __ )| ____|
 | |_) | |  | ||  _ \|  _|
 |  _ <| |__| || |_) | |___
 |_| \_\\____/ |____/|_____|
 Ver: %s
LOGO

def print_logo
  puts "\e[36m" + (LOGO % VERSION) + "\e[0m" # Cyan color
end

if command == "start"
  port ||= "7000"
  print_logo
  puts "Starting takeoff of RuBee server on port #{port}..."
  exec("rackup #{ENV['RACKUP_FILE']} -p #{port}")
elsif command == "start_dev"
  port ||= "7000"
  print_logo

  puts "Starting takeoff of RuBee server on port #{port} in dev mode..."

  exec("rerun -- rackup --port #{port} config.ru")
elsif command == "stop"
  exec("pkill -f rubee")
elsif command == "status"
  exec("ps aux | grep rubee")
else
  puts "Unknown command: #{command}"
end
